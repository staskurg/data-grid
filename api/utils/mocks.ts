import { ACCESSOR_KEYS, COLUMN_TYPES } from './constants';
import { User, TableSchema } from './types';

export const mockUsers: User[] = [
  {
    id: '1',
    name: 'Emma Mitchell',
    email: 'emma.mitchell@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/women/1.jpg',
  },
  {
    id: '2',
    name: 'James Wilson',
    email: 'james.wilson@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/men/1.jpg',
  },
  {
    id: '3',
    name: 'Sophia Anderson',
    email: 'sophia.anderson@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/women/2.jpg',
  },
  {
    id: '4',
    name: 'Lucas Thomas',
    email: 'lucas.thomas@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/men/2.jpg',
  },
  {
    id: '5',
    name: 'Olivia Garcia',
    email: 'olivia.garcia@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/women/3.jpg',
  },
  {
    id: '6',
    name: 'Benjamin Taylor',
    email: 'benjamin.taylor@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/men/3.jpg',
  },
  {
    id: '7',
    name: 'Ava Martinez',
    email: 'ava.martinez@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/women/4.jpg',
  },
  {
    id: '8',
    name: 'William Johnson',
    email: 'william.johnson@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/men/4.jpg',
  },
  {
    id: '9',
    name: 'Mia Robinson',
    email: 'mia.robinson@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/women/5.jpg',
  },
  {
    id: '10',
    name: 'Henry Thompson',
    email: 'henry.thompson@email.com',
    avatarUrl: 'https://randomuser.me/api/portraits/men/5.jpg',
  },
];

export const table1: TableSchema = {
  columns: [
    {
      accessorKey: ACCESSOR_KEYS.DISPLAY_ID,
      type: COLUMN_TYPES.LINK,
      label: 'ID',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.PLASMID,
      type: COLUMN_TYPES.TAG,
      label: 'Plasmid',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.VOLUME_UI,
      type: COLUMN_TYPES.NUMBER,
      label: 'Volume (ÂµL)',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.LENGTH_BP,
      type: COLUMN_TYPES.NUMBER,
      label: 'Length (bp)',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.STORAGE_LOCATION,
      type: COLUMN_TYPES.TEXT,
      label: 'Storage Location',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.EDITED_BY,
      type: COLUMN_TYPES.USER,
      label: 'Edited By',
      editable: true,
    },
  ],
  rows: [
    {
      id: '1',
      displayId: { url: '/1', value: 'inv-GT-plasmid-1' },
      plasmid: 'GT-plasmids-1: lentiCRISPR v2',
      volumeUI: 50,
      lengthBP: 14873,
      storageLocation: 'Freezer 2 Box A1',
      editedBy: [mockUsers[0]],
    },
    {
      id: '2',
      displayId: { url: '/2', value: 'inv-GT-plasmid-2' },
      plasmid: 'GT-plasmids-2: psPAX2',
      volumeUI: 30,
      lengthBP: 10704,
      storageLocation: 'Freezer 2 Box A2',
      editedBy: [mockUsers[0]],
    },
    {
      id: '3',
      displayId: { url: '/3', value: 'inv-GT-plasmid-3' },
      plasmid: 'GT-plasmids-3: pMD2.G',
      volumeUI: 40,
      lengthBP: 5820,
      storageLocation: 'Freezer 2 Box A2',
      editedBy: [mockUsers[0]],
    },
    {
      id: '4',
      displayId: { url: '/4', value: 'inv-GT-plasmid-4' },
      plasmid: 'GT-plasmids-4: CRISPRoff-v2.1',
      volumeUI: 25,
      lengthBP: 11875,
      storageLocation: 'Freezer 2 Box B1',
      editedBy: [mockUsers[2]],
    },
    {
      id: '5',
      displayId: { url: '/5', value: 'inv-GT-plasmid-5' },
      plasmid: 'GT-plasmids-5: TETv4',
      volumeUI: 35,
      lengthBP: 11679,
      storageLocation: 'Freezer 2 Box A2',
      editedBy: [],
    },
    {
      id: '6',
      displayId: { url: '/6', value: 'inv-GT-plasmid-6' },
      plasmid: 'GT-plasmids-6: pRSV-Rev',
      volumeUI: 45,
      lengthBP: 4180,
      storageLocation: 'Freezer 2 Box A1',
      editedBy: [],
    },
    {
      id: '7',
      displayId: { url: '/7', value: 'inv-GT-plasmid-7' },
      plasmid: 'GT-plasmids-7: lentiCRISPR v2',
      volumeUI: 30,
      lengthBP: 14873,
      storageLocation: 'Freezer 2 Box B1',
      editedBy: [],
    },
    {
      id: '8',
      displayId: { url: '/8', value: 'inv-GT-plasmid-8' },
      plasmid: 'GT-plasmids-8: pAdDeltaF6',
      volumeUI: 40,
      lengthBP: 15420,
      storageLocation: 'Freezer 2 Box A3',
      editedBy: [],
    },
    {
      id: '9',
      displayId: { url: '/9', value: 'inv-GT-plasmid-9' },
      plasmid: 'GT-plasmids-9: pMDLg',
      volumeUI: 20,
      lengthBP: 8890,
      storageLocation: 'Freezer 2 Box A1',
      editedBy: [],
    },
    {
      id: '10',
      displayId: { url: '/10', value: 'inv-GT-plasmid-10' },
      plasmid: 'GT-plasmids-10: pcDNA-3xHA-hTERT',
      volumeUI: 50,
      lengthBP: 9027,
      storageLocation: 'Freezer 2 Box A3',
      editedBy: [],
    },
  ],
};

export const table2: TableSchema = {
  columns: [
    {
      accessorKey: ACCESSOR_KEYS.DISPLAY_ID,
      type: COLUMN_TYPES.LINK,
      label: 'ID',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.SUMMARY,
      type: COLUMN_TYPES.TEXT,
      label: 'Summary',
      editable: true,
    },
    {
      accessorKey: ACCESSOR_KEYS.STATUS,
      type: COLUMN_TYPES.TEXT,
      label: 'Status',
      editable: false,
    },
    {
      accessorKey: ACCESSOR_KEYS.ASSIGNEE,
      type: COLUMN_TYPES.USER,
      label: 'Assignee',
      editable: true,
    },
  ],
  rows: [
    {
      id: '1',
      displayId: { url: '/tasks/KT-1', value: 'KT-1' },
      summary: 'Add pka formula',
      status: 'todo',
      assignee: [mockUsers[0]],
    },
    {
      id: '2',
      displayId: { url: '/tasks/KT-2', value: 'KT-2' },
      summary: 'Select option ordering',
      status: 'todo',
      assignee: [mockUsers[1]],
    },
    {
      id: '3',
      displayId: { url: '/tasks/KT-3', value: 'KT-3' },
      summary: 'Database filtering v2',
      status: 'in-progress',
      assignee: [mockUsers[0], mockUsers[1]],
    },
    {
      id: '4',
      displayId: { url: '/tasks/KT-4', value: 'KT-4' },
      summary: 'Colored labels for select',
      status: 'todo',
      assignee: [mockUsers[2]],
    },
    {
      id: '5',
      displayId: { url: '/tasks/KT-5', value: 'KT-5' },
      summary: 'Default values for select columns',
      status: 'todo',
      assignee: [mockUsers[2], mockUsers[3], mockUsers[4]],
    },
    {
      id: '6',
      displayId: { url: '/tasks/KT-6', value: 'KT-6' },
      summary: 'Improve UI responsiveness',
      status: 'in-progress',
      assignee: [mockUsers[3]],
    },
    {
      id: '7',
      displayId: { url: '/tasks/KT-7', value: 'KT-7' },
      summary: 'Update dependencies',
      status: 'completed',
      assignee: [mockUsers[6]],
    },
    {
      id: '8',
      displayId: { url: '/tasks/KT-8', value: 'KT-8' },
      summary: 'Refactor authentication flow',
      status: 'todo',
      assignee: [mockUsers[7]],
    },
    {
      id: '9',
      displayId: { url: '/tasks/KT-9', value: 'KT-9' },
      summary: 'Optimize database queries',
      status: 'in-progress',
      assignee: [],
    },
    {
      id: '10',
      displayId: { url: '/tasks/KT-10', value: 'KT-10' },
      summary: 'Test API error handling',
      status: 'todo',
      assignee: [],
    },
  ],
};
